"""
Django settings for vaxitrack project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import json
import django_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
if os.path.exists('keys.json'):
    keys = json.load(open('keys.json', 'r'))
    SECRET_KEY = keys['SECRET_KEY']
    GAPI_KEY = keys['GAPI_KEY']
    EMAIL_HOST_PASSWORD = keys['GMAIL_KEY']
    REDIS_URL = 'localhost'
    DEBUG = True
else:
    SECRET_KEY = os.environ['SECRET_KEY']
    GAPI_KEY = os.environ['GAPI_KEY']
    EMAIL_HOST_PASSWORD = os.environ['GMAIL_KEY']
    REDIS_URL = os.environ['REDIS_URL']
    DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vaxitrack',
    'django_extensions',
    'django_q',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vaxitracksite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vaxitracksite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_PORT = 587
EMAIL_HOST_USER = 'vaxitrack@gmail.com'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# Django queue settings
TASK_TIMEOUT = 30
Q_CLUSTER = {
    'name': 'vaxitrack_queue',
    'workers': 2,   # number of worker processes
    'timeout': TASK_TIMEOUT,  # max time a worker can spend on a single task
    'retry': TASK_TIMEOUT+1,  # time to wait for a worker to complete a task before submitting task again
    'queue_limit': 20,  # max items in queue
    'save_limit': 0,  # max items in success queue
    'recycle': 50,    # restart each worker after N jobs to release memory
    'ack_failures': True,   # tasks that return failure will be removed from queue
    'max_attemps': 1,       # how many times to attempt a task (NB 0 means inf)
    'sync': DEBUG,           # set true to force sync execution in debug
}

# Queue is held on a redis server
if DEBUG:
    Q_CLUSTER['redis'] = {
        'host': REDIS_URL,
        'port': 6379,
        'db': 0,
        'password': None,
        'socket_timeout': None,
        'charset': 'utf-8',
        'errors': 'strict',
        'unix_socket_path': None
    }
else:
    Q_CLUSTER['redis'] = REDIS_URL

# Activate Django-Heroku. Needs to come last.
django_heroku.settings(locals())
